!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/cleyon/repos/github.com/cleyon/m2/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
_less_than	m2	/^function _less_than(s1, s2,    s1_underscorep, s2_underscorep)$/;"	f
canonical_form	m2	/^function canonical_form(sym,    lbracket, rbracket, arr, key)$/;"	f
chomp	m2	/^function chomp(s)$/;"	f
chop	m2	/^function chop(s)$/;"	f
currently_active_p	m2	/^function currently_active_p()$/;"	f
debugp	m2	/^function debugp(lev)$/;"	f
default_shell	m2	/^function default_shell()$/;"	f
delete_symbol	m2	/^function delete_symbol(sym)$/;"	f
display_form	m2	/^function display_form(sym,    sep, arr, key)$/;"	f
dodef	m2	/^function dodef(append_flag,    name, str, x)$/;"	f
dofile	m2	/^function dofile(filename, read_literally,    savefile, saveline, savebuffer)$/;"	f
dostr	m2	/^function dostr(s,    r, rprev)$/;"	f
dosubs	m2	/^function dosubs(s,    expand, i, j, l, m, nparam, p, param, r, symfunc)$/;"	f
error	m2	/^function error(text, line, file)$/;"	f
flush_stdout	m2	/^function flush_stdout()$/;"	f
format_message	m2	/^function format_message(text, line, file)$/;"	f
get_symbol	m2	/^function get_symbol(sym)$/;"	f
hex_digits	m2	/^function hex_digits(n,    i, s)$/;"	f
incr_symbol	m2	/^function incr_symbol(sym, incr)$/;"	f
initialize	m2	/^function initialize(    d, dateout, egid, euid, host, hostname, user)$/;"	f
integerp	m2	/^function integerp(pat)$/;"	f
last	m2	/^function last(s)$/;"	f
load_home_m2rc	m2	/^function load_home_m2rc()$/;"	f
m2_default	m2	/^function m2_default(    sym)$/;"	f
m2_define	m2	/^function m2_define(    append_flag, sym)$/;"	f
m2_dump	m2	/^function m2_dump(    buf, cnt, definition, dumpfile, i, key, keys, sym_name, all_flag)$/;"	f
m2_else	m2	/^function m2_else()$/;"	f
m2_endif	m2	/^function m2_endif()$/;"	f
m2_error	m2	/^function m2_error(    m2_will_exit, message)$/;"	f
m2_exit	m2	/^function m2_exit()$/;"	f
m2_if	m2	/^function m2_if(    sym, cond, op, val2, val4)$/;"	f
m2_ignore	m2	/^function m2_ignore(    buf, delim, save_line, save_lineno)$/;"	f
m2_include	m2	/^function m2_include(    error_text, filename, read_literally)$/;"	f
m2_incr	m2	/^function m2_incr(    incr, sym)$/;"	f
m2_input	m2	/^function m2_input(    getstat, input, sym)$/;"	f
m2_let	m2	/^function m2_let(    sym, math, bcfile, val)$/;"	f
m2_longdef	m2	/^function m2_longdef(    buf, save_line, save_lineno, sym)$/;"	f
m2_longend	m2	/^function m2_longend()$/;"	f
m2_read	m2	/^function m2_read(    sym, file, line, val, getstat)$/;"	f
m2_shell	m2	/^function m2_shell(    buf, delim, save_line, save_lineno, sendto)$/;"	f
m2_typeout	m2	/^function m2_typeout(    buf)$/;"	f
m2_undef	m2	/^function m2_undef(    sym)$/;"	f
path_exists_p	m2	/^function path_exists_p(path)$/;"	f
print_stderr	m2	/^function print_stderr(text)$/;"	f
process_line	m2	/^function process_line(read_literally,    newstring)$/;"	f
qsort	m2	/^function qsort(A, left, right,    i, last)$/;"	f
randint	m2	/^function randint(n)$/;"	f
read_lines_until	m2	/^function read_lines_until(delim,    buf, delim_len)$/;"	f
readline	m2	/^function readline(    getstat, i, status)$/;"	f
readline_from_string	m2	/^function readline_from_string(    i, status)$/;"	f
set_symbol	m2	/^function set_symbol(sym, val)$/;"	f
shipout_printf	m2	/^function shipout_printf(s)$/;"	f
strictp	m2	/^function strictp()$/;"	f
swap	m2	/^function swap(A, i, j,    t)$/;"	f
symbol_defined_p	m2	/^function symbol_defined_p(sym)$/;"	f
symbol_internal_p	m2	/^function symbol_internal_p(sym)$/;"	f
symbol_protected_p	m2	/^function symbol_protected_p(sym)$/;"	f
symbol_root	m2	/^function symbol_root(sym,    _sym)$/;"	f
symbol_true_p	m2	/^function symbol_true_p(sym)$/;"	f
symbol_valid_p	m2	/^function symbol_valid_p(sym,    result, lbracket, rbracket, new_sym)$/;"	f
tmpdir	m2	/^function tmpdir(    t)$/;"	f
uuid	m2	/^function uuid()$/;"	f
validate_symbol	m2	/^function validate_symbol(sym)$/;"	f
